dnl Process this file with autoconf to produce a configure script.

# get rid of that stupid cache mechanism
rm -f config.cache

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(calaos_bootsplash, 0.0.1)
AM_CONFIG_HEADER(config.h)

AC_PROG_CXX

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_C_CONST
AM_ENABLE_SHARED
AM_PROG_LIBTOOL

if test "x${exec_prefix}" = "xNONE"; then
  if test "x${prefix}" = "xNONE"; then
    bindir="${ac_default_prefix}/bin";
  else
    bindir="${prefix}/bin";
  fi
else
  if test "x${prefix}" = "xNONE"; then
    bindir="${ac_default_prefix}/bin";
  else
    bindir="${prefix}/bin";
  fi
fi

if test "x${exec_prefix}" = "xNONE"; then
  if test "x${prefix}" = "xNONE"; then
    libdir="${ac_default_prefix}/lib";
  else
    libdir="${prefix}/lib";
  fi
else
  if test "x${prefix}" = "xNONE"; then
    libdir="${ac_default_prefix}/lib";
  else
    libdir="${prefix}/lib";
  fi
fi

dnl Set PACKAGE_DATA_DIR in config.h.
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${ac_default_prefix}/share/${PACKAGE}", [PACKAGE_DATA_DIR])
else
  AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${prefix}/share/${PACKAGE}", [PACKAGE_DATA_DIR])
fi

dnl Set PACKAGE_BIN_DIR in config.h.
if test "x${bindir}" = "xNONE"; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "${ac_default_prefix}/bin", [PACKAGE_BIN_DIR])
  else
    AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "${prefix}/bin", [PACKAGE_BIN_DIR])
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "${bindir}", [PACKAGE_BIN_DIR])
fi

dnl Set PACKAGE_LIB_DIR in config.h.
if test "x${libdir}" = "xNONE"; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_LIB_DIR, "${ac_default_prefix}/lib", [PACKAGE_LIB_DIR])
  else
    AC_DEFINE_UNQUOTED(PACKAGE_LIB_DIR, "${prefix}/lib", [PACKAGE_LIB_DIR])
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_LIB_DIR, "${libdir}", [PACKAGE_LIB_DIR])
fi

# PROG="pkg-config";
# AC_PATH_PROG(PKG_CONFIG, $PROG, "", $PATH)
# if test -z "$PKG_CONFIG" ; then
#   echo $PROG " is not in your \$PATH. Please ensure it is.";
#   echo "Read the manual page for you shell as to how to extend your path.";
#   AC_MSG_ERROR(Cannot find $PROG)
# fi
# AC_SUBST(PKG_CONFIG)

# PKG_CHECK_MODULES(SQLITE, sqlite3)

PROG="evas-config";
AC_PATH_PROG(EVAS_CONFIG, $PROG, "", $PATH)
if test -z "$EVAS_CONFIG" ; then
  echo $PROG " is not in your \$PATH. Please ensure it is.";
  echo "Read the manual page for you shell as to how to extend your path.";
  AC_MSG_ERROR(Cannot find $PROG)
fi
evas_libs=`$EVAS_CONFIG --libs`
evas_cflags=`$EVAS_CONFIG --cflags`
AC_SUBST(evas_libs)
AC_SUBST(evas_cflags)

PROG="ecore-config";
AC_PATH_PROG(ECORE_CONFIG, $PROG, "", $PATH)
if test -z "$ECORE_CONFIG" ; then
  echo $PROG " is not in your \$PATH. Please ensure it is.";
  echo "Read the manual page for you shell as to how to extend your path.";
  AC_MSG_ERROR(Cannot find $PROG)
fi
ecore_libs=`$ECORE_CONFIG --libs`
ecore_cflags=`$ECORE_CONFIG --cflags`
AC_SUBST(ecore_libs)
AC_SUBST(ecore_cflags)

PROG="edje-config";
AC_PATH_PROG(EDJE_CONFIG, $PROG, "", $PATH)
if test -z "$EDJE_CONFIG" ; then
  echo $PROG " is not in your \$PATH. Please ensure it is.";
  echo "Read the manual page for you shell as to how to extend your path.";
  AC_MSG_ERROR(Cannot find $PROG)
fi
edje_libs=`$EDJE_CONFIG --libs`
edje_cflags=`$EDJE_CONFIG --cflags`
AC_SUBST(edje_libs)
AC_SUBST(edje_cflags)

PROG="emotion-config";
AC_PATH_PROG(EMOTION_CONFIG, $PROG, "", $PATH)
if test -z "$EMOTION_CONFIG" ; then
  echo $PROG " is not in your \$PATH. Please ensure it is.";
  echo "Read the manual page for you shell as to how to extend your path.";
  AC_MSG_ERROR(Cannot find $PROG)
fi
emotion_libs=`$EMOTION_CONFIG --libs`
emotion_cflags=`$EMOTION_CONFIG --cflags`
AC_SUBST(emotion_libs)
AC_SUBST(emotion_cflags)

AC_OUTPUT([
Makefile
src/Makefile
data/Makefile
debian/changelog
],[
])

echo "
$PACKAGE $VERSION
Configuration:
--------------

Host System Type:           $host
Compiler:                   $CC $CFLAGS
Install path:               $prefix
"
